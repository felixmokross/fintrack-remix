datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?
  notes    Note[]
  accounts Account[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @unique
}

model Note {
  id    String @id @default(cuid())
  title String
  body  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
}

model Account {
  id   String      @id @default(cuid())
  name String
  type AccountType @default(ASSET)

  assetClass   AssetClass? @relation(fields: [assetClassId], references: [id], onDelete: Restrict)
  assetClassId String?

  group   AccountGroup? @relation(fields: [groupId], references: [id], onDelete: Restrict)
  groupId String?

  accountUnit AccountUnit @default(CURRENCY)

  currency   Currency? @relation(fields: [currencyId], references: [id], onDelete: Restrict)
  currencyId String?

  stock   Stock?  @relation(fields: [stockId], references: [id], onDelete: Restrict)
  stockId String?

  openingBalance Decimal?
  openingDate    DateTime? @db.Date
  closingDate    DateTime? @db.Date

  isActive Boolean @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Restrict)
  userId String
}

enum AccountUnit {
  CURRENCY
  STOCK
}

enum AccountType {
  ASSET
  LIABILITY
}

model AssetClass {
  id      String    @id @default(cuid())
  name    String
  Account Account[]
}

model AccountGroup {
  id      String    @id @default(cuid())
  name    String
  Account Account[]
}

model Currency {
  id      String    @id
  name    String
  Account Account[]
  Stock   Stock[]
}

model Stock {
  id                String    @id
  tradingCurrency   Currency  @relation(fields: [tradingCurrencyId], references: [id], onDelete: Restrict)
  tradingCurrencyId String
  Account           Account[]
}
